Komendy platfor,y DOCKER:

Komenda 1 -> wersja dockera: docker version
Komenda 2 -> uruchomienie konteneraz z pakietu diamol: docker container run diamol/ch02-hello-diamol
Komenda 3 -> uruchomienie interakcyjnego kontenera: docker container run --interactive --tty diamol/base
Komenda 4 -> podgląd listy działających kontenerów: docker container ls
Komenda 5 -> podgląd listy procesów wybranym kontenerze: docker container top 000a1aeab38a; docker container logs 000a1aeab38a
Komenda 6 -> podgląd wszystkich istniejących kontenerów: docker container ls --all
Komenda 7 -> uruchomienie aplikacji webowej w tle: docker container run --detach --publish 8088:80 diamol/ch02-hello-diamol-web , po wykonaniu komendy otwórz stronę: localhost:8088
Komenda 8 -> podgląd wszystkich kontenerów: docker container ls --all
Komenda 9 -> uruchomienie aplikacji webowej w tle: docker container run --detach --publish 8088:80 diamol/ch02-hello-diamol-web
Komenda 10 -> usuwanie wszystkich kontenrów dockera: docker container rm --force $(docker container ls --all --quiet)
Komenda 11 -> usuwanie obrazu: docker rmi sha256:fe5a4c954fe2df5cadeea304ab632533f8ece9e31bd219ea22fdbf8b597571eb /id obrazu/
Komenda 12 -> pobieranie obrazu kontenera: docker image pull diamol/ch03-web-ping
Komenda 13 -> wykonanie kontenera na podstawie pobranego obrazu: docker container run -d --name web-ping diamol/ch03-web-ping
Komenda 14 -> przekształcenie pliku dockerfile w obraz Dockera: docker image build --tag web-ping .
Komenda 15 -> wyświetlenie wszystkch obrazów zaczynających się na literę 'w': docker image ls 'w*'
Komenda 16 -> uruchomienie kontenera na podstawie utworzonego obrazu web-ping:  docker container run -e TARGET=docker.com -e INTERVAL=5000 web-ping
Komenda 17 -> historia obrazu web-ping: docker image history web-ping
Komenda 18 -> lista obrazów: docker image ls
Komenda 19 -> wyświetlenie zajętości pamięciowej elementów dockera: docker system df
Komenda 20 -> budowanie drugiej wersji obrazu po drobnej modyfikacji pliku app.js: docker image build -t web-ping:v2 .
Komenda 21 -> zmodyfikuj plik Dockerfile aplikacji web-ping: 
                  FROM diamol/node

                  CMD ["node", "/web-ping/app.js"]
                  
                  ENV TARGET="blog.sixeyed.com" \
                  	METHOD="HEAD" \
                  	INTERVAL="3000"
                  
                  WORKDIR /web-ping
                  COPY app.js 

Komenda 22 -> budowa wersji 3: docker image build -t web-ping:v3 .
Komenda 23 -> aplikacje wieloetapowe -> wejdź do katalogu: cd image-of-the-day
            -> zbuduj obraz: docker image build -t image-of-the-day .
            -> utwórz siec dockera:  docker network create nat
            -> uruchomienie kontenera na podstawie przygotowanego obrazu: docker (container) run --name iotd -d -p 800:80 --network nat image-of-the-day  
            -> otwórz stronę: localhost:800/image
Komenda 24 -> Program w pythonie: zbuduj program python_sigmoid, napisz Dockerfile - pliki dołączone, zaistaluj numpy
              -> orzygotuj obraz - instalaując plugin Docker dla pycharm i uruchamiając program na dockerze lub
              -> wejdź do katalogu projektu pythona i zadaja komendę: docker build -t sigmoid-python
              -> uruchom interaktywnie kontener: docker container run --interactive --tty sigmoid-python
Komenda 24 -> Uruchamianie aplikacji wielkontenerowych: musi być zdana sieć Dockera (mamy utworzoną sieć nat) - wchodzi w katalog aplikacji: cd diamol/ch07/exercises/to-list
            -> uruchamiasz aplikcję: docker-compose up
Komenda 24 ->
Komenda 24 ->
Komenda 24 ->
